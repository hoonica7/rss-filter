name: Filter RSS Feed everyday + Email on Saturday

on:
  schedule:
    # 매일 휴스턴 시간 오전 8시(CDT)에 실행 -> UTC 기준 13시
    - cron: '0 13 * * *'
  workflow_dispatch:

jobs:
  filter-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ➡️ last_failed_journal.txt 캐시 복원
      - name: Restore last failed journal state
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: last_failed_journal.txt
          key: ${{ runner.os }}-last-failed-journal
          restore-keys: |
            ${{ runner.os }}-last-failed-journal

      - name: Set up Python with caching
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python script to filter RSS and create files
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          python filter_rss_v3_NatSci.py
      
      - name: Upload artifacts for next steps
        uses: actions/upload-artifact@v4
        with:
          name: filtered-files
          path: |
            filtered_titles.txt
            filtered_feed_*.xml
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: filtered-files
      
      # 이메일 발송 여부를 결정하는 스텝
      - name: Check if today is Saturday
        id: check_day
        run: echo "is_saturday=$(date +%u)" >> $GITHUB_OUTPUT
      
      - name: Send email with results
        # 오늘이 토요일인 경우(date +%u == 6)에만 이메일을 발송합니다.
        if: steps.check_day.outputs.is_saturday == '6'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: '[NatSci RSS] New Paper Updates'
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          body: file://filtered_titles.txt

      # ➡️ last_failed_journal.txt 캐시 저장
      # 스크립트가 성공하거나 실패하더라도 캐시를 저장하도록 if 조건을 추가
      - name: Save last failed journal state
        if: success() || failure()
        uses: actions/cache/save@v4
        with:
          path: last_failed_journal.txt
          key: ${{ runner.os }}-last-failed-journal

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
